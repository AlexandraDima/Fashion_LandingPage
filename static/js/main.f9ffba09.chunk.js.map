{"version":3,"sources":["components/Header/Header.module.css","components/Modal/Modal.module.css","components/FullPost/FullPost.js","components/Modal/Backdrop.js","components/Modal/Modal.js","containers/Blog/Blog.js","components/Cursor/Cursor.js","components/Navigation/Navigation.js","components/Header/Header.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FullPost","post","this","props","id","articleId","className","title","alt","image","src","style","width","content","Component","Backdrop","show","classes","onClick","clicked","Modal","modalClosed","transform","opacity","children","gsap","registerPlugin","ScrollTrigger","Blog","slideRef","el","revealRefs","current","includes","push","showFullPost","setState","selectedPostId","showArticle","closeModal","state","articles","excerpt","fullPost","createRef","revealImgRef","imgRef","revealTextRef","forEach","slide","index","revealIm","querySelector","imgI","revealText","tl","TimelineMax","defaults","duration","ease","scrollTrigger","trigger","start","toggleActions","fromTo","x","scale","map","item","key","ref","titleSwipe","Cursor","useState","y","cursorState","handleMove","setClicked","linkHovered","setLinkHovered","useEffect","addEventListeners","handleLinkHoverEvents","removeEventListeners","document","addEventListener","onMouseMove","onMouseDown","onMouseUp","querySelectorAll","removeEventListener","e","clientX","clientY","cursorClasses","classNames","left","top","Navigation","navBar","href","target","Header","showNavigation","button","navigationState","setToggleNav","line1","useRef","line2","logo","navBarSelect","onToggleNav","to","rotate","background","color","clipPath","navHeader","burger","Layout","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9ffba09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__2Eflj\",\"navHeader\":\"Header_navHeader__19srr\",\"line1\":\"Header_line1__oQuGl\",\"line2\":\"Header_line2__1SqxB\",\"burger\":\"Header_burger__22w7C\",\"navBar\":\"Header_navBar__3jf6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__Z-dMS\",\"Backdrop\":\"Modal_Backdrop__1U2hX\"};","import React, { Component } from 'react';\r\nimport './FullPost.css';\r\n\r\n\r\nclass FullPost extends Component {\r\n    render () {\r\n        let post = null;\r\n        if(this.props.id === this.props.articleId){\r\n            post = (\r\n                <div>\r\n                    <h1 className=\"titleArticle\">{this.props.title} Collection</h1>\r\n                    <img alt={this.props.image} src={`/assets/${this.props.image}.png`} style={{width:'100%'}}/>\r\n                    <p className=\"bodyArticle\">{this.props.content}</p>\r\n                </div>\r\n    \r\n            );\r\n        }\r\n      \r\n        return post;\r\n    }\r\n}\r\n\r\nexport default FullPost;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> :null\r\n);\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from './Backdrop';\r\n\r\nconst Modal = (props) =>(\r\n    <div>\r\n    <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n    <div \r\n        style = {{\r\n            transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity: props.show ? '0.9' :'0'\r\n        }}\r\n        className={classes.Modal}>\r\n        {props.children}\r\n    </div>\r\n    </div>\r\n);\r\nexport default Modal;","import React, {Component, createRef} from 'react';\r\nimport FullPost from '../../components/FullPost/FullPost';\r\nimport { gsap, TimelineMax } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\nimport './Blog.css';\r\nimport Modal from '../../components/Modal/Modal';\r\ngsap.registerPlugin(ScrollTrigger); \r\n\r\n\r\nclass Blog extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            articles:[\r\n                {\r\n                  id:1,\r\n                  title: \"Spring\",\r\n                  excerpt:\r\n                    \"In ullam et nulla repudiandae praesentium, laboriosam quas tempore fuga asperiores eveniet amet.\",\r\n                  fullPost: \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. At, ea.Lorem, ipsum dolor sit amet consectetur adipisicing elit.Lorem, ipsum dolor sit amet consectetur adipisicing elit. At, ea.Lorem, ipsum dolor sit amet consectetur adipisicing elit.Lorem, ipsum dolor sit amet consectetur adipisicing elit.\",\r\n                  image: \"spring\"\r\n                },\r\n                {\r\n                  id:2,\r\n                  title: \"Summer\",\r\n                  excerpt:\r\n                    \"Dignissimos placeat cupiditate perferendis eaque praesentium similique officia dolore?\",\r\n                  fullPost: \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. At, ea.Lorem, ipsum dolor sit amet consectetur adipisicing elit.Lorem, ipsum dolor sit amet consectetur adipisicing elit. At, ea.Lorem, ipsum dolor sit amet consectetur adipisicing elit.\",\r\n                  image:\"summer\"\r\n                },\r\n                {\r\n                  id:3,\r\n                  title: \"Winter\",\r\n                  excerpt:\r\n                    \"In ullam et nulla repudiandae praesentium, laboriosam quas tempore fuga asperiores eveniet amet.\",\r\n                  fullPost: \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. At, ea.Lorem, ipsum dolor sit amet consectetur adipisicing elit.Lorem, ipsum dolor sit amet consectetur adipisicing elit. At, ea.Lorem, ipsum dolor sit amet consectetur adipisicing elit.\",\r\n                  image:\"winter\"\r\n                }\r\n              ],\r\n              showArticle: false,\r\n              selectedPostId:null\r\n        };\r\n        this.revealRefs = createRef([]);\r\n        this.revealRefs.current = [];\r\n        this.revealImgRef = createRef();\r\n        this.imgRef = createRef();\r\n        this.revealTextRef = createRef();\r\n    \r\n    \r\n      }\r\n    \r\n      componentDidMount(){\r\n       //Init Controller\r\n        this.revealRefs.current.forEach((slide,index) => {\r\n          const revealIm = slide.querySelector('.reveal-img');\r\n          const imgI = slide.querySelector('img');\r\n          const revealText = slide.querySelector(\".reveal-text\");\r\n          \r\n          const tl = new TimelineMax({\r\n            defaults: { duration: 1, ease: \"power2.inOut\" },\r\n            scrollTrigger:{\r\n              id: `section-${index+1}`,\r\n              trigger: slide,\r\n              //markers:true,\r\n              start: 'center bottom',\r\n              toggleActions: 'restart pause restart pause'\r\n            }\r\n          });\r\n          \r\n          tl.fromTo(revealIm, { x:'0%'}, { x:'100%'});\r\n          tl.fromTo(imgI, { scale: 2 }, {scale: 1}, \"-=1\");\r\n          tl.fromTo(revealText, { x: \"0%\" }, { x: \"100%\"}, \"-=0.75\");\r\n          }); \r\n      }\r\n\r\n   \r\n      slideRef = (el) => {\r\n        if (el && !this.revealRefs.current.includes(el)) {\r\n          this.revealRefs.current.push(el);\r\n        } \r\n      }\r\n\r\n    //pass on the Id and open the modal\r\n      showFullPost = (id) => {\r\n        this.setState({\r\n          selectedPostId:id,\r\n          showArticle:true\r\n        })\r\n      }\r\n  //method to close the Modal\r\n  closeModal = () =>{\r\n      this.setState({showArticle:false})\r\n  }\r\n \r\n    render(){\r\n    \r\n        return(\r\n        <div>\r\n                 {\r\n        this.state.articles.map((item) => (\r\n            <section key={item.id} className=\"slide\" ref={this.slideRef}>\r\n            <div className=\"hero-img\">\r\n                <img alt={item.image} src={`./assets/${item.image}.png`} ref={this.imgRef}/>\r\n                <div className=\"reveal-img\" ref={this.revealImgRef}></div>\r\n            </div>\r\n            <div className=\"hero-desc\">\r\n              <div className=\"title\">\r\n                <h2>\r\n               <b className=\"fashion-span\">{item.title}</b> Collection\r\n                </h2>\r\n                <div className=\"title-swipe t-swipe\" ref={this.titleSwipe}></div>\r\n              </div>\r\n              <p>\r\n                {item.excerpt}\r\n              </p>\r\n              <button onClick={() => this.showFullPost(item.id)} className=\"explore mountain-exp\">Explore</button>\r\n              <div className=\"reveal-text\" ref={this.revealTextRef}></div>\r\n            </div>\r\n            \r\n            <Modal show={this.state.showArticle} modalClosed={this.closeModal}>\r\n            <FullPost id={this.state.selectedPostId} articleId={item.id} title={item.title} image={item.image} content={item.fullPost}></FullPost>\r\n            </Modal>\r\n            \r\n            \r\n            \r\n          </section>\r\n        \r\n            ))}\r\n            \r\n           \r\n            </div>\r\n       \r\n        )\r\n       \r\n    }\r\n}\r\nexport default Blog;","import React,{useEffect, useState} from 'react';\r\nimport classNames from \"classnames\";\r\nimport './Cursor.css';\r\n\r\nconst Cursor  = () => {\r\n    const [cursorState, handleMove] = useState({\r\n        x: 0, \r\n        y: 0\r\n    });\r\n    const [clicked, setClicked] = useState(false);\r\n    const [linkHovered, setLinkHovered] = useState(false);\r\n    \r\n    useEffect(() => {\r\n       addEventListeners();\r\n       handleLinkHoverEvents();\r\n       return () => removeEventListeners();\r\n    },[]); \r\n    \r\n    const addEventListeners = () => {\r\n     document.addEventListener(\"mousemove\", onMouseMove);\r\n     document.addEventListener(\"mousedown\", onMouseDown);\r\n     document.addEventListener(\"mouseup\", onMouseUp);\r\n    };\r\n    //Hover effect \r\n    const handleLinkHoverEvents = () => {\r\n        document.querySelectorAll(\"a, button, span\").forEach(el => {\r\n        el.addEventListener(\"mouseover\", () => setLinkHovered(true));\r\n        el.addEventListener(\"mouseout\", () => setLinkHovered(false));\r\n    });\r\n    };\r\n    const removeEventListeners = () => {\r\n     document.removeEventListener(\"mousemove\", onMouseMove);\r\n     document.removeEventListener(\"mousedown\", onMouseDown);\r\n     document.removeEventListener(\"mouseup\", onMouseUp);\r\n     }; \r\n\r\n    const onMouseMove = (e) => {\r\n        handleMove({\r\n                x: e.clientX,\r\n                y: e.clientY\r\n        })\r\n    }\r\n\r\n    //Click the buttons \r\n    const onMouseDown = () => {\r\n        setClicked(true);\r\n    };\r\n    \r\n    const onMouseUp = () => {\r\n        setClicked(false);\r\n    };\r\n\r\n    const cursorClasses = classNames(\r\n        'cursor',\r\n        {\r\n            'cursor--clicked': clicked,\r\n            'cursor--link-hovered': linkHovered\r\n        }\r\n    );\r\n \r\n    return(\r\n        <div className={cursorClasses}\r\n        style={{left: `${cursorState.x}px`, top: `${cursorState.y}px`}}>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default Cursor;","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => (\r\n    <nav className={props.navBar}>\r\n    <ul className=\"nav-links\">\r\n    <h3><a href=\"https://twitter.com/\" target=\"blank\">Twitter</a></h3>\r\n    <h3><a href=\"https://www.youtube.com/\" target=\"blank\">Youtube</a></h3>\r\n    <h3><a href=\"https://instagram.com/\" target=\"blank\">Instagram</a></h3>\r\n    </ul>\r\n    <div className=\"contact\">\r\n      <h2>Stay in touch.</h2>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Nobis dolorem\r\n        praesentium ea amet error quidem natus. Magnam explicabo sed tenetur?\r\n      </p>\r\n    </div>\r\n  </nav>\r\n)\r\nexport default Navigation;","import React, {useState, useEffect, useRef} from 'react';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport { TimelineMax} from \"gsap\";\r\nimport classes from \"./Header.module.css\";\r\nconst Header  = () => {\r\n    const [navigationState, setToggleNav]= useState({\r\n        showNavigation: false,\r\n        button: false\r\n    });\r\n    const line1 = useRef();\r\n    const line2 = useRef();\r\n    const logo = useRef();\r\n    const navBarSelect =  useRef();\r\n    const show = navigationState.showNavigation;\r\n    const tl = new TimelineMax();\r\n\r\n    useEffect(() => {\r\n      onToggleNav();\r\n    }, []);\r\n    const onToggleNav = () => {\r\n      setToggleNav({showNavigation: !navigationState.showNavigation});\r\n      if(show===true){\r\n        tl.to(line1.current, 0.5, { rotate: \"45\", y: 5, background: \"#58aeda\" });\r\n        tl.to(line2.current, 0.5, { rotate: \"-45\", y: -5, background: \"#58aeda\" });\r\n        tl.to(logo.current, 1, {color: \"#58aeda\" }); \r\n        tl.to(navBarSelect.current, 1, { clipPath: \"circle(2500px at 100% -10%)\" }); \r\n       \r\n      } else{\r\n        tl.to(line1.current, 0.5, { rotate: \"0\", y: 0, background: \"black\" });\r\n        tl.to(line2.current, 0.5, { rotate: \"0\", y: 0, background: \"black\" });\r\n         tl.to(logo.current, 1, { color: \"black\" }); \r\n        tl.to(navBarSelect.current, 1, { opacity:0, clipPath: \"circle(50px at 100% -10%)\" });\r\n      }\r\n    }\r\n    \r\n   \r\n    return(\r\n    \r\n        <header className={classes.navHeader} >\r\n        <h1 id={classes.logo}><a href=\"/\" ref={logo}>fashion.</a></h1>\r\n        {/* Burger onClick show Navigation */}\r\n        <span className={classes.burger}  onClick={onToggleNav} >\r\n          <div className={classes.line1} ref={line1}></div>\r\n          <div className={classes.line2} ref={line2}></div>\r\n        </span>\r\n        { !show ? <Navigation navBar={classes.navBar} ref={navBarSelect} /> : ''}\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport './Layout.css';\r\n\r\n\r\nconst Layout = (props) => (\r\n    <div className=\"container-fluid\">\r\n    <div>\r\n        <Header />\r\n       {/*  <Cursor /> */}\r\n\r\n    </div>\r\n    <main>\r\n        {props.children}\r\n    </main>\r\n    </div>\r\n)\r\n\r\nexport default Layout;","import React from 'react';\nimport Blog from './containers/Blog/Blog';\nimport Cursor from './components/Cursor/Cursor'; \nimport Layout from './components/Layout/Layout';\nimport './App.css';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n       <Cursor /> \n\n      <Layout>\n \n      <Blog />\n\n      </Layout>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}